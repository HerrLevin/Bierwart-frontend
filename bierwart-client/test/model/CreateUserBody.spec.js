/*
 * Bierwart API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.33
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BierwartApi);
  }
}(this, function(expect, BierwartApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('CreateUserBody', function() {
      beforeEach(function() {
        instance = new BierwartApi.CreateUserBody();
      });

      it('should create an instance of CreateUserBody', function() {
        // TODO: update the code to test CreateUserBody
        expect(instance).to.be.a(BierwartApi.CreateUserBody);
      });

      it('should have the property name (base name: "name")', function() {
        // TODO: update the code to test the property name
        expect(instance).to.have.property('name');
        // expect(instance.name).to.be(expectedValueLiteral);
      });

      it('should have the property idRole (base name: "id_role")', function() {
        // TODO: update the code to test the property idRole
        expect(instance).to.have.property('idRole');
        // expect(instance.idRole).to.be(expectedValueLiteral);
      });

      it('should have the property mail (base name: "mail")', function() {
        // TODO: update the code to test the property mail
        expect(instance).to.have.property('mail');
        // expect(instance.mail).to.be(expectedValueLiteral);
      });

      it('should have the property admin (base name: "admin")', function() {
        // TODO: update the code to test the property admin
        expect(instance).to.have.property('admin');
        // expect(instance.admin).to.be(expectedValueLiteral);
      });

      it('should have the property idAccount (base name: "id_account")', function() {
        // TODO: update the code to test the property idAccount
        expect(instance).to.have.property('idAccount');
        // expect(instance.idAccount).to.be(expectedValueLiteral);
      });

    });
  });

}));
