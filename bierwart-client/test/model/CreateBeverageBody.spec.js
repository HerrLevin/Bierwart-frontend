/*
 * Bierwart API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.33
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BierwartApi);
  }
}(this, function(expect, BierwartApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('CreateBeverageBody', function() {
      beforeEach(function() {
        instance = new BierwartApi.CreateBeverageBody();
      });

      it('should create an instance of CreateBeverageBody', function() {
        // TODO: update the code to test CreateBeverageBody
        expect(instance).to.be.a(BierwartApi.CreateBeverageBody);
      });

      it('should have the property idDrinkType (base name: "id_drink_type")', function() {
        // TODO: update the code to test the property idDrinkType
        expect(instance).to.have.property('idDrinkType');
        // expect(instance.idDrinkType).to.be(expectedValueLiteral);
      });

      it('should have the property name (base name: "name")', function() {
        // TODO: update the code to test the property name
        expect(instance).to.have.property('name');
        // expect(instance.name).to.be(expectedValueLiteral);
      });

      it('should have the property size (base name: "size")', function() {
        // TODO: update the code to test the property size
        expect(instance).to.have.property('size');
        // expect(instance.size).to.be(expectedValueLiteral);
      });

      it('should have the property calories (base name: "calories")', function() {
        // TODO: update the code to test the property calories
        expect(instance).to.have.property('calories');
        // expect(instance.calories).to.be(expectedValueLiteral);
      });

      it('should have the property alcohol (base name: "alcohol")', function() {
        // TODO: update the code to test the property alcohol
        expect(instance).to.have.property('alcohol');
        // expect(instance.alcohol).to.be(expectedValueLiteral);
      });

    });
  });

}));
