/*
 * Bierwart API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.33
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The CreateBeverageBody model module.
 * @module model/CreateBeverageBody
 * @version 0.1
 */
export class CreateBeverageBody {
  /**
   * Constructs a new <code>CreateBeverageBody</code>.
   * @alias module:model/CreateBeverageBody
   * @class
   * @param idDrinkType {Number} id of drink type
   * @param name {String} Name of the drink
   */
  constructor(idDrinkType, name) {
    this.idDrinkType = idDrinkType;
    this.name = name;
  }

  /**
   * Constructs a <code>CreateBeverageBody</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CreateBeverageBody} obj Optional instance to populate.
   * @return {module:model/CreateBeverageBody} The populated <code>CreateBeverageBody</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CreateBeverageBody();
      if (data.hasOwnProperty('id_drink_type'))
        obj.idDrinkType = ApiClient.convertToType(data['id_drink_type'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('size'))
        obj.size = ApiClient.convertToType(data['size'], 'Number');
      if (data.hasOwnProperty('calories'))
        obj.calories = ApiClient.convertToType(data['calories'], 'Number');
      if (data.hasOwnProperty('alcohol'))
        obj.alcohol = ApiClient.convertToType(data['alcohol'], 'Number');
    }
    return obj;
  }
}

/**
 * id of drink type
 * @member {Number} idDrinkType
 */
CreateBeverageBody.prototype.idDrinkType = undefined;

/**
 * Name of the drink
 * @member {String} name
 */
CreateBeverageBody.prototype.name = undefined;

/**
 * Size of this drink in milliliters
 * @member {Number} size
 */
CreateBeverageBody.prototype.size = undefined;

/**
 * Energy of the Drink in kcal/100g
 * @member {Number} calories
 * @default 0
 */
CreateBeverageBody.prototype.calories = 0;

/**
 * Alcohol amount in one-tenth of a percent by volume (â€°). [We're using integers. We hate comma. Deal with it!]
 * @member {Number} alcohol
 * @default 0
 */
CreateBeverageBody.prototype.alcohol = 0;

