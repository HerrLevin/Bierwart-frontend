/*
 * Bierwart API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.33
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The CreateUserBody model module.
 * @module model/CreateUserBody
 * @version 0.1
 */
export class CreateUserBody {
  /**
   * Constructs a new <code>CreateUserBody</code>.
   * @alias module:model/CreateUserBody
   * @class
   * @param name {String} Name of user 
   * @param idRole {Number} id of the role the user should be added to
   */
  constructor(name, idRole) {
    this.name = name;
    this.idRole = idRole;
  }

  /**
   * Constructs a <code>CreateUserBody</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CreateUserBody} obj Optional instance to populate.
   * @return {module:model/CreateUserBody} The populated <code>CreateUserBody</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CreateUserBody();
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('id_role'))
        obj.idRole = ApiClient.convertToType(data['id_role'], 'Number');
      if (data.hasOwnProperty('mail'))
        obj.mail = ApiClient.convertToType(data['mail'], 'String');
      if (data.hasOwnProperty('admin'))
        obj.admin = ApiClient.convertToType(data['admin'], 'Boolean');
      if (data.hasOwnProperty('id_account'))
        obj.idAccount = ApiClient.convertToType(data['id_account'], 'Number');
    }
    return obj;
  }
}

/**
 * Name of user 
 * @member {String} name
 */
CreateUserBody.prototype.name = undefined;

/**
 * id of the role the user should be added to
 * @member {Number} idRole
 */
CreateUserBody.prototype.idRole = undefined;

/**
 * E-Mail address for the user
 * @member {String} mail
 */
CreateUserBody.prototype.mail = undefined;

/**
 * Grant this user admin rights
 * @member {Boolean} admin
 */
CreateUserBody.prototype.admin = undefined;

/**
 * If supplied, the newly created user's actions get charged to this account. If empty, a new (personal) account is created. Use this, if you want to create a guest-account for regular user.
 * @member {Number} idAccount
 */
CreateUserBody.prototype.idAccount = undefined;

