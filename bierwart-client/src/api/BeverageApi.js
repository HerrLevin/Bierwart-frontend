/*
 * Bierwart API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.33
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {CreateBeverageBody} from '../model/CreateBeverageBody';
import {CreateDrinkTypeBody} from '../model/CreateDrinkTypeBody';
import {InlineResponse200} from '../model/InlineResponse200';
import {OrderBeverageBody} from '../model/OrderBeverageBody';

/**
* Beverage service.
* @module api/BeverageApi
* @version 0.1
*/
export class BeverageApi {

    /**
    * Constructs a new BeverageApi. 
    * @alias module:api/BeverageApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the 18bbaa70c0d47a01455e398c1e6b6d3d operation.
     * @callback moduleapi/BeverageApi~18bbaa70c0d47a01455e398c1e6b6d3dCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * returns a list of all drinks in the database
     * @param {module:api/BeverageApi~18bbaa70c0d47a01455e398c1e6b6d3dCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    18bbaa70c0d47a01455e398c1e6b6d3d(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse200;

      return this.apiClient.callApi(
        '/drinksoverview', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the 5b5e752adb97d9b14175c93f267de9e6 operation.
     * @callback moduleapi/BeverageApi~5b5e752adb97d9b14175c93f267de9e6Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * A user consumes or returns one or more drinks
     * @param {module:model/OrderBeverageBody} body 
     * @param {module:api/BeverageApi~5b5e752adb97d9b14175c93f267de9e6Callback} callback The callback function, accepting three arguments: error, data, response
     */
    5b5e752adb97d9b14175c93f267de9e6(body, callback) {
      
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling 5b5e752adb97d9b14175c93f267de9e6");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/orderBeverage', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the 92b02dfc2c3a4e943f4d78d812608d07 operation.
     * @callback moduleapi/BeverageApi~92b02dfc2c3a4e943f4d78d812608d07Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * An administrator creates a new drink of a drink type
     * Ein Administrator legt ein neues Getränk eines Getränketyps an
     * @param {module:model/CreateBeverageBody} body 
     * @param {module:api/BeverageApi~92b02dfc2c3a4e943f4d78d812608d07Callback} callback The callback function, accepting three arguments: error, data, response
     */
    92b02dfc2c3a4e943f4d78d812608d07(body, callback) {
      
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling 92b02dfc2c3a4e943f4d78d812608d07");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['auth'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/createBeverage', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the fe9c9aecba5dc539aa51291c4809de62 operation.
     * @callback moduleapi/BeverageApi~fe9c9aecba5dc539aa51291c4809de62Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * An administrator creates a new drink type (e.g. Softdrink) with a fixed price
     * Ein Administrator legt einen neuen Getränketyp (bspw. Softdrink) mit einem Preis an
     * @param {module:model/CreateDrinkTypeBody} body 
     * @param {module:api/BeverageApi~fe9c9aecba5dc539aa51291c4809de62Callback} callback The callback function, accepting three arguments: error, data, response
     */
    fe9c9aecba5dc539aa51291c4809de62(body, callback) {
      
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling fe9c9aecba5dc539aa51291c4809de62");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['auth'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/createDrinkType', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}